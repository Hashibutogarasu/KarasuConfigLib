plugins {
    id 'java'
    id("xyz.jpenilla.run-paper") version "2.3.1"
    id 'maven-publish'
}

// バージョン管理の設定
def versionFile = file("version.properties")
def buildNumberFile = file("build-number.properties")

// version.propertiesが存在しない場合は作成
if (!versionFile.exists()) {
    def versionProps = new Properties()
    versionProps.setProperty('major', '0')
    versionProps.setProperty('minor', '1')
    versionProps.setProperty('patch', '0')
    versionFile.createNewFile()
    versionFile.withOutputStream { versionProps.store(it, "Version properties for ${project.name}") }
}

// build-number.propertiesが存在しない場合は作成
if (!buildNumberFile.exists()) {
    def buildProps = new Properties()
    buildProps.setProperty('buildNumber', '1')
    buildNumberFile.createNewFile()
    buildNumberFile.withOutputStream { buildProps.store(it, "Build Number for ${project.name}") }
}

// プロパティファイルの読み込み
def versionProps = new Properties()
versionFile.withInputStream { versionProps.load(it) }
def buildProps = new Properties()
buildNumberFile.withInputStream { buildProps.load(it) }

// バージョン情報の取得
def major = versionProps.getProperty('major')
def minor = versionProps.getProperty('minor')
def patch = versionProps.getProperty('patch')
def buildNumber = buildProps.getProperty('buildNumber')

// プロジェクトのバージョンを設定
group = 'com.karasu256'
version = "${major}.${minor}.${patch}.${buildNumber}"

// GitHub Packagesへの公開設定
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifactId = 'karasu-config-lib'
            
            version = project.version.toString()
            
            pom {
                name = 'KarasuConfigLib'
                description = 'A Minecraft plugin that provides config API'
                url = 'https://github.com/Karasu-Lab/KarasuConfigLib'
                
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }
                
                developers {
                    developer {
                        id = 'hashibutogarasu'
                        name = 'Hashibutogarasu'
                        email = 'karasu@karasu256.com'
                        url = 'https://github.com/Hashibutogarasu'
                    }
                }
                
                scm {
                    connection = 'scm:git:git://github.com/Karasu-Lab/KarasuConfigLib.git'
                    developerConnection = 'scm:git:ssh://github.com/Karasu-Lab/KarasuConfigLib.git'
                    url = 'https://github.com/Karasu-Lab/KarasuConfigLib'
                }
            }
        }
    }
    repositories {
        maven {
            name = "Local"
            url = layout.buildDirectory.dir('repos/bundles')
        }
        
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/Karasu-Lab/KarasuConfigLib")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_ACTOR")
                password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
            }
        }
    }
}

dependencies {
    compileOnly("io.papermc.paper:paper-api:1.21.3-R0.1-SNAPSHOT")
}

// ルートプロジェクトの共通タスクを適用
rootProject.ext.createCommonTasks(project)

// ビルドタスク設定
tasks.named('build') {
    dependsOn 'syncVersionWithGit'
    finalizedBy 'incrementBuildNumber'
}

// processResources タスク設定
tasks.named('processResources') {
    dependsOn 'updatePluginVersion'
}

// plugin.yml更新タスク設定
tasks.named('updatePluginVersion') {
    dependsOn 'syncVersionWithGit'
}

